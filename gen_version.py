
# This script generates a version.h file with the current firmware version (auto-increment)
import os
import re

version_file = os.path.join("c:/Users/vanba/OneDrive/Documenten/PlatformIO/Projects/firebase test", "firmware_version.txt")
header_file = os.path.join("c:/Users/vanba/OneDrive/Documenten/PlatformIO/Projects/firebase test/src", "version.h")

# Lees huidige versie
if os.path.exists(version_file):
    with open(version_file, "r") as vf:
        version = vf.read().strip()
else:
    version = "1.0"

# Verhoog patch (1.0 -> 1.1, 1.9 -> 2.0)
parts = version.split(".")
if len(parts) == 2:
    major, minor = int(parts[0]), int(parts[1])
    minor += 1
    if minor >= 10:
        major += 1
        minor = 0
    new_version = f"{major}.{minor}"
else:
    new_version = "1.0"

# Schrijf nieuwe versie terug
with open(version_file, "w") as vf:
    vf.write(new_version + "\n")

# Schrijf naar version.h
header = f'// Auto-generated by gen_version.py\n#define FIRMWARE_VERSION "{new_version}"\n'
with open(header_file, "w") as f:
    f.write(header)
